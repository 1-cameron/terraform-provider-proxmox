name: Test changes
on:
  pull_request:
    branches:
      - main
      - master
      - 'v*'
jobs:
  test:
    name: Pull Request
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up the required version of Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      -
        name: Install the required version of GoReleaser
        env:
          GORELEASER_VERSION: '0.155.1'
        run: |
          curl -sL -o goreleaser_amd64.deb "https://github.com/goreleaser/goreleaser/releases/download/v${GORELEASER_VERSION}/goreleaser_amd64.deb"
          sudo dpkg -i goreleaser_amd64.deb
          rm -f goreleaser_amd64.deb
      -
        name: Import the GPG signing key
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mkdir -p ~/.gnupg

          cat << EOF > ~/.gnupg/gpg.conf
          use-agent
          pinentry-mode loopback
          EOF

          echo "$GPG_KEY" | base64 -d -i | gpg --batch --allow-secret-key-import --import
          gpg --keyid-format LONG --list-secret-keys

          cat << EOF > ~/.gnupg/gpg-agent.conf
          default-cache-ttl 7200
          max-cache-ttl 31536000
          allow-loopback-pinentry
          allow-preset-passphrase
          EOF

          echo RELOADAGENT | gpg-connect-agent

          printf '%s' "$GPG_PASSPHRASE" > ./.gpg_passphrase
      -
        name: Create release
        env:
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}
        run: |
          goreleaser build --parallelism 2 --rm-dist --snapshot --timeout 1h
